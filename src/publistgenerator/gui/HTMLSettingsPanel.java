/*
 */
package publistgenerator.gui;

import java.awt.Component;
import java.io.File;
import java.util.Arrays;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import publistgenerator.data.settings.HTMLSettings;
import publistgenerator.io.ResourceLocator;

/**
 *
 * @author Sander Verdonschot <sander.verdonschot at gmail.com>
 */
public class HTMLSettingsPanel extends javax.swing.JPanel {

    private HTMLSettings settings;

    /**
     * Empty constructor, for use in the NetBeans GUI editor.
     */
    public HTMLSettingsPanel() {
        initComponents();
    }
    
    /**
     * Creates new form GeneralSettingsPanel
     */
    public HTMLSettingsPanel(HTMLSettings settings) {
        this.settings = settings;
        initComponents();
        populateValues();
    }
    
    private void populateValues() {
        // Header & Footer
        if (settings.getHeader() == null) {
            headerTextField.setText("");
            headerFileChooser.setCurrentDirectory(ResourceLocator.getBaseDirectory().toFile());
        } else {
            headerTextField.setText(ResourceLocator.getRelativePath(settings.getHeader()));
            headerFileChooser.setCurrentDirectory(settings.getHeader().getParentFile());
        }
        
        if (settings.getFooter()== null) {
            footerTextField.setText("");
            footerFileChooser.setCurrentDirectory(ResourceLocator.getBaseDirectory().toFile());
        } else {
            footerTextField.setText(ResourceLocator.getRelativePath(settings.getFooter()));
            footerFileChooser.setCurrentDirectory(settings.getFooter().getParentFile());
        }

        // Link to text
        linkToTextCheckBox.setSelected(settings.linkToTextVersion());

        // Publication links
        abstractComboBox.setSelectedItem(settings.getIncludeAbstract());
        bibtexComboBox.setSelectedItem(settings.getIncludeBibtex());
        pdfComboBox.setSelectedItem(settings.getIncludePDF());

        // Google analytics
        String user = settings.getGoogleAnalyticsUser();
        analyticsUserTextField.setText(user);
        analyticsCheckBox.setSelected(user != null && !user.isEmpty());
    }
    
    @Override
    public void setEnabled(boolean enabled) {
        super.setEnabled(enabled);

        // Dis/enable all components
        for (Component c : getComponents()) {
            c.setEnabled(enabled);
        }

        // Handle troublesome components
        analyticsUserTextField.setEnabled(enabled && analyticsCheckBox.isSelected());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerFileChooser = new javax.swing.JFileChooser();
        footerFileChooser = new javax.swing.JFileChooser();
        headerLabel = new javax.swing.JLabel();
        headerSeparator = new javax.swing.JSeparator();
        headerTextField = new javax.swing.JTextField();
        headerBrowseButton = new javax.swing.JButton();
        footerTextField = new javax.swing.JTextField();
        footerBrowseButton = new javax.swing.JButton();
        linkToTextLabel = new javax.swing.JLabel();
        linkToTextSeparator = new javax.swing.JSeparator();
        linkToTextCheckBox = new javax.swing.JCheckBox();
        linksLabel = new javax.swing.JLabel();
        linksSeparator = new javax.swing.JSeparator();
        abstractLabel = new javax.swing.JLabel();
        abstractComboBox = new javax.swing.JComboBox();
        bibtexLabel = new javax.swing.JLabel();
        pdfLabel = new javax.swing.JLabel();
        bibtexComboBox = new javax.swing.JComboBox();
        pdfComboBox = new javax.swing.JComboBox();
        analyticsLabel = new javax.swing.JLabel();
        analyticsSeparator = new javax.swing.JSeparator();
        analyticsCheckBox = new javax.swing.JCheckBox();
        analyticsUserLabel = new javax.swing.JLabel();
        analyticsUserTextField = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createTitledBorder("HTML-Only Settings"));

        headerLabel.setText("Header & Footer");

        headerTextField.getDocument().addDocumentListener(new DocumentListener() {
            public void insertUpdate(DocumentEvent e) {
                headerTextFieldTextChanged(e);
            }
            public void removeUpdate(DocumentEvent e) {
                headerTextFieldTextChanged(e);
            }
            public void changedUpdate(DocumentEvent e) {
                //Plain text components do not fire these events
            }
        });
        headerTextField.setColumns(29);
        headerTextField.setToolTipText("The contents of this file will be copied to your publication list before the publications themselves are listed. See the provided default header for an example.");

        headerBrowseButton.setText("Browse...");
        headerBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                headerBrowseButtonActionPerformed(evt);
            }
        });

        footerTextField.getDocument().addDocumentListener(new DocumentListener() {
            public void insertUpdate(DocumentEvent e) {
                footerTextFieldTextChanged(e);
            }
            public void removeUpdate(DocumentEvent e) {
                footerTextFieldTextChanged(e);
            }
            public void changedUpdate(DocumentEvent e) {
                //Plain text components do not fire these events
            }
        });
        footerTextField.setColumns(29);
        footerTextField.setToolTipText("The contents of this file will be copied to your publication list after the publications themselves are listed. See the provided default footer for an example.");

        footerBrowseButton.setText("Browse...");
        footerBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                footerBrowseButtonActionPerformed(evt);
            }
        });

        linkToTextLabel.setText("Link to plain text");

        linkToTextCheckBox.setText("Include a link to the plaintext publication list");
        linkToTextCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                linkToTextCheckBoxActionPerformed(evt);
            }
        });

        linksLabel.setText("Per publication links");

        abstractLabel.setText("Include the abstract for:");

        abstractComboBox.setModel(new DefaultComboBoxModel(HTMLSettings.PublicationType.values()));
        abstractComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abstractComboBoxActionPerformed(evt);
            }
        });

        bibtexLabel.setText("Include the BibTeX for:");

        pdfLabel.setText("Include the PDF for:");

        bibtexComboBox.setModel(new DefaultComboBoxModel(Arrays.copyOfRange(HTMLSettings.PublicationType.values(), 0, 4)));
        bibtexComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bibtexComboBoxActionPerformed(evt);
            }
        });

        pdfComboBox.setModel(new DefaultComboBoxModel(HTMLSettings.PublicationType.values()));
        pdfComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdfComboBoxActionPerformed(evt);
            }
        });

        analyticsLabel.setText("Google analytics");

        analyticsCheckBox.setText("Include analytics code");
        analyticsCheckBox.setToolTipText("This allows you to monitor your site usage through Google Analytics. To use this feature, you need a valid Google Analytics account.");
        analyticsCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analyticsCheckBoxActionPerformed(evt);
            }
        });

        analyticsUserLabel.setText("Account identifier:");

        analyticsUserTextField.getDocument().addDocumentListener(new DocumentListener() {
            public void insertUpdate(DocumentEvent e) {
                analyticsUserTextFieldTextChanged(e);
            }
            public void removeUpdate(DocumentEvent e) {
                analyticsUserTextFieldTextChanged(e);
            }
            public void changedUpdate(DocumentEvent e) {
                //Plain text components do not fire these events
            }
        });
        analyticsUserTextField.setColumns(25);
        analyticsUserTextField.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(headerLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(headerSeparator))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(linkToTextLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(linkToTextSeparator))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(linksLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(linksSeparator))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(analyticsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(analyticsSeparator))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(footerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(footerBrowseButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(headerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(headerBrowseButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bibtexLabel)
                                .addGap(18, 18, 18)
                                .addComponent(bibtexComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(abstractLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(abstractComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pdfLabel)
                                .addGap(31, 31, 31)
                                .addComponent(pdfComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(linkToTextCheckBox)
                                    .addComponent(analyticsCheckBox))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(analyticsUserLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(analyticsUserTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(headerSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(headerLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(headerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(headerBrowseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(footerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(footerBrowseButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(linkToTextLabel)
                    .addComponent(linkToTextSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(linkToTextCheckBox)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(linksLabel)
                    .addComponent(linksSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(abstractLabel)
                    .addComponent(abstractComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bibtexLabel)
                    .addComponent(bibtexComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pdfLabel)
                    .addComponent(pdfComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(analyticsLabel)
                    .addComponent(analyticsSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(analyticsCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(analyticsUserLabel)
                    .addComponent(analyticsUserTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void headerBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_headerBrowseButtonActionPerformed
        int opened = headerFileChooser.showOpenDialog(this);

        if (opened == JFileChooser.APPROVE_OPTION) {
            headerTextField.setText(ResourceLocator.getRelativePath(headerFileChooser.getSelectedFile()));
        }
    }//GEN-LAST:event_headerBrowseButtonActionPerformed

    private void footerBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_footerBrowseButtonActionPerformed
        int opened = footerFileChooser.showOpenDialog(this);

        if (opened == JFileChooser.APPROVE_OPTION) {
            footerTextField.setText(ResourceLocator.getRelativePath(footerFileChooser.getSelectedFile()));
        }
    }//GEN-LAST:event_footerBrowseButtonActionPerformed

    private void linkToTextCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_linkToTextCheckBoxActionPerformed
        settings.setLinkToTextVersion(linkToTextCheckBox.isSelected());
    }//GEN-LAST:event_linkToTextCheckBoxActionPerformed

    private void abstractComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abstractComboBoxActionPerformed
        settings.setIncludeAbstract((HTMLSettings.PublicationType) abstractComboBox.getSelectedItem());
    }//GEN-LAST:event_abstractComboBoxActionPerformed

    private void bibtexComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bibtexComboBoxActionPerformed
        settings.setIncludeBibtex((HTMLSettings.PublicationType) bibtexComboBox.getSelectedItem());
    }//GEN-LAST:event_bibtexComboBoxActionPerformed

    private void pdfComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdfComboBoxActionPerformed
        settings.setIncludePDF((HTMLSettings.PublicationType) pdfComboBox.getSelectedItem());
    }//GEN-LAST:event_pdfComboBoxActionPerformed

    private void analyticsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analyticsCheckBoxActionPerformed
        if (analyticsCheckBox.isSelected()) {
            // Update settings
            settings.setGoogleAnalyticsUser(analyticsUserTextField.getText());

            // Update UI
            analyticsUserTextField.setEnabled(true);
        } else {
            // Update settings
            settings.setGoogleAnalyticsUser(null);

            // Update UI
            analyticsUserTextField.setEnabled(false);
        }
    }//GEN-LAST:event_analyticsCheckBoxActionPerformed
    
    private void analyticsUserTextFieldTextChanged(javax.swing.event.DocumentEvent evt) {
        // Update the settings
        settings.setGoogleAnalyticsUser(analyticsUserTextField.getText());
    }

    private void headerTextFieldTextChanged(javax.swing.event.DocumentEvent evt) {
        // Update the settings
        settings.setHeader(ResourceLocator.getFile(headerTextField.getText()));
    }

    private void footerTextFieldTextChanged(javax.swing.event.DocumentEvent evt) {
        // Update the settings
        settings.setFooter(ResourceLocator.getFile(footerTextField.getText()));
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox abstractComboBox;
    private javax.swing.JLabel abstractLabel;
    private javax.swing.JCheckBox analyticsCheckBox;
    private javax.swing.JLabel analyticsLabel;
    private javax.swing.JSeparator analyticsSeparator;
    private javax.swing.JLabel analyticsUserLabel;
    private javax.swing.JTextField analyticsUserTextField;
    private javax.swing.JComboBox bibtexComboBox;
    private javax.swing.JLabel bibtexLabel;
    private javax.swing.JButton footerBrowseButton;
    private javax.swing.JFileChooser footerFileChooser;
    private javax.swing.JTextField footerTextField;
    private javax.swing.JButton headerBrowseButton;
    private javax.swing.JFileChooser headerFileChooser;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JSeparator headerSeparator;
    private javax.swing.JTextField headerTextField;
    private javax.swing.JCheckBox linkToTextCheckBox;
    private javax.swing.JLabel linkToTextLabel;
    private javax.swing.JSeparator linkToTextSeparator;
    private javax.swing.JLabel linksLabel;
    private javax.swing.JSeparator linksSeparator;
    private javax.swing.JComboBox pdfComboBox;
    private javax.swing.JLabel pdfLabel;
    // End of variables declaration//GEN-END:variables
}
